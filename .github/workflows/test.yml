name: test
on: [ push, pull_request ]
jobs:
  windows-x86:
    name: windows (x86)
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actboy168/setup-luamake@master
    - run: luamake -arch x86 -notest -sanitize
    - run: luamake test -v
  windows-x86_64:
    name: windows (x86_64)
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actboy168/setup-luamake@master
    - run: luamake -arch x86_64 -notest -sanitize
    - run: luamake test -v
  windows-clang:
    name: windows (clang)
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actboy168/setup-luamake@master
    - run: luamake -cc clang-cl -notest
    - run: luamake test -v
  windows-mingw:
    name: windows (mingw)
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/checkout@v4
      with:
        path: luamake
        repository: actboy168/luamake
        submodules : recursive
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-ninja
    - shell: msys2 {0}
      working-directory: luamake
      run: ./compile/build.sh notest
    - shell: msys2 {0}
      run: |
        ./luamake/luamake -notest
        ./luamake/luamake test -v
  macos-x86_64:
    name: macos (x86_64)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actboy168/setup-luamake@master
    - run: luamake -arch x86_64 -notest -sanitize
    - run: luamake test -v
  macos-arm64:
    name: macos (arm64)
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - uses: actboy168/setup-luamake@master
    - run: luamake -arch arm64 -notest -sanitize
    - run: luamake test -v
  linux-x86_64:
    name: linux (x86_64)
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - uses: actboy168/setup-luamake@master
    - run: sudo apt install binutils-dev libunwind-dev
    - run: luamake -notest -sanitize
    - run: luamake lua test/glibc-version.lua
    - run: luamake test -v
  linux:
    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64, armv7, riscv64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          path: luamake
          repository: actboy168/luamake
          submodules : recursive
      - uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.arch }}
          distro: ubuntu20.04
          dockerRunArgs: |
            --volume "${PWD}:/actboy168"
          install: |
            apt-get update -q -y
            apt-get install -q -y gcc g++ ninja-build
          run: |
            pushd luamake
            ./compile/build.sh notest
            popd
            ./luamake/luamake -notest -sanitize
            ./luamake/luamake lua test/glibc-version.lua
            ./luamake/luamake test -v
  bsd:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: freebsd
            version: '14.0'
            install: pkg install -y ninja libinotify
          - os: openbsd
            version: '7.5'
            install: pkg_add ninja libinotify
          - os: netbsd
            version: '10.0'
            install: pkgin -y install ninja-build libinotify
    name: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: luamake
          repository: actboy168/luamake
          submodules : recursive
      - uses: actions/checkout@v4
        with:
          path: bee.lua
          repository: actboy168/bee.lua
          submodules : recursive
      - uses: cross-platform-actions/action@v0.24.0
        with:
          operating_system: ${{ matrix.os }}
          version: ${{ matrix.version }}
          run: |
            sudo ${{ matrix.install }}
            cd luamake
            ./compile/build.sh notest
            cd ../bee.lua
            ./../luamake/luamake -noetst
            ./../luamake/luamake test -v
